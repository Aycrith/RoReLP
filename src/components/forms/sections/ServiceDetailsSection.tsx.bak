import { FormField, FormInput, FormSelect, FormTextarea } from '@/components/ui/FormFields';
import { UseFormReturn } from 'react-hook-form';
import { OnboardingFormData } from '@/lib/validations/onboarding';

interface ServiceDetailsSectionProps {
  form: UseFormReturn<OnboardingFormData>;
  onNext: () => void;
  onPrevious: () => void;
}

export const ServiceDetailsSection = ({ form, onNext, onPrevious }: ServiceDetailsSectionProps) => {
  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-xl font-semibold text-gray-900 mb-2">Service Details</h2>
        <p className="text-gray-600">Tell us about what service you&apos;re looking for and when you need it.</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <FormField
          name="serviceType"
          label="Service Type"
          required
          form={form}
          render={({ field }) => (
            <FormSelect
              {...field}
              options={[
                { value: 'repair', label: 'Repair Service' },
                { value: 'maintenance', label: 'Maintenance Service' },
                { value: 'inspection', label: 'Inspection' },
                { value: 'consultation', label: 'Consultation' },
                { value: 'other', label: 'Other' }
              ]}
              placeholder="Select service type"
            />
          )}
        />

        <FormField
          name="urgency"
          label="Urgency Level"
          required
          form={form}
          render={({ field }) => (
            <FormSelect
              {...field}
              options={[
                { value: 'low', label: 'Low - Within 2 weeks' },
                { value: 'medium', label: 'Medium - Within 1 week' },
                { value: 'high', label: 'High - Within 3 days' },
                { value: 'emergency', label: 'Emergency - ASAP' }
              ]}
              placeholder="Select urgency level"
            />
          )}
        />
      </div>

      <FormField
        name="preferredDate"
        label="Preferred Service Date"
        form={form}
        render={({ field }) => (
          <FormInput
            {...field}
            type="date"
            min={new Date().toISOString().split('T')[0]}
          />
        )}
      />

      <FormField
        name="additionalNotes"
        label="Additional Notes"
        form={form}
        render={({ field }) => (
          <FormTextarea
            {...field}
            placeholder="Any additional information about your service needs..."
            rows={4}
          />
        )}
      />

      <div className="flex justify-between pt-6">
        <button
          type="button"
          onClick={onPrevious}
          className="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
        >
          Previous
        </button>
        <button
          type="button"
          onClick={onNext}
          className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          Next
        </button>
      </div>
    </div>
  );
};
